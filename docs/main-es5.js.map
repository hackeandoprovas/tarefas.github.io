{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/todo.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","apiURL","AppComponent","service","todos","form","description","required","minLength","listarTodos","listar","subscribe","todoList","console","log","todo","value","salvar","savedTodo","push","reset","deletar","id","next","response","marcarComoConcluido","todoAtualizado","done","doneDate","submit","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","AppRoutingModule","forRoot","exports","TodoService","http","post","get","url","patch","providedIn","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:8080/api/todos'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { Todo } from './todo';\nimport { TodoService } from './todo.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  todos: Todo[] = []\n  form: FormGroup = new FormGroup({\n    description : new FormControl('', [Validators.required, Validators.minLength(4)] )\n  })\n\n  constructor(\n    private service: TodoService\n  ){}\n\n  ngOnInit(){\n    this.listarTodos()\n  }\n  \n  listarTodos(){\n    this.service.listar().subscribe(todoList => {\n      console.log(todoList)\n      this.todos = todoList \n    })\n  }\n\n  submit(){\n    const todo: Todo = { ...this.form.value }\n    this.service\n        .salvar(todo)\n        .subscribe(savedTodo => {\n          this.todos.push(savedTodo)\n          this.form.reset()\n        })\n  }\n\n  delete(todo: Todo){\n    this.service.deletar(todo.id).subscribe({\n      next: (response) => this.listarTodos()\n    })\n  }\n\n  done(todo: Todo) {\n    this.service.marcarComoConcluido(todo.id).subscribe({\n      next: (todoAtualizado) => {\n        todo.done = todoAtualizado.done\n        todo.doneDate = todoAtualizado.doneDate\n      }\n    })\n  }\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\n    <a class=\"navbar-brand\">Lista de Tarefas</a>\n</nav>\n<div class=\"container mt-4\">\n    <h3>Todos</h3>\n    <hr />\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" >\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"description\" />\n            </div>\n            <div class=\"col-md-1\">\n                <button type=\"submit\" [disabled]=\"!form.get('description').valid\" \n                        class=\"btn btn-primary\">Add\n                </button>\n            </div>\n        </div>\n    </form>\n    <hr />\n    <div class=\"row\">\n        <div class=\"col-md-7\">\n            <ul class=\"list-group\">\n                <li *ngFor=\"let todo of todos\" \n                    class=\"list-group-item d-flex justify-content-between align-items-center\">\n                    <span class=\"{{ todo.done ? 'done' : '' }}\">\n                        {{ todo.description }} {{ todo.doneDate }}\n                    </span>\n                    <div class=\"btn-group\">\n                        <button class=\"btn btn-success\" \n                                [disabled]=\"todo.done\" \n                                (click)=\"done(todo)\">\n                            Done\n                        </button>\n                        <button class=\"btn btn-danger\" (click)=\"delete(todo)\" >Delete</button>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Todo } from './todo'\nimport { Observable } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  apiURL: string = environment.apiURL\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  salvar(todo: Todo) : Observable<Todo> {\n    return this.http.post<Todo>(this.apiURL, todo)\n  }\n\n  listar() : Observable<Todo[]>{\n    return this.http.get<Todo[]>(this.apiURL);\n  }\n\n  deletar(id: number) : Observable<void> {\n    const url = `${this.apiURL}/${id}`\n    return this.http.delete<void>(url)\n  }\n\n  marcarComoConcluido(id: number) : Observable<Todo> {\n    const url = `${this.apiURL}/${id}/done`\n    return this.http.patch<Todo>(url, {})\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}